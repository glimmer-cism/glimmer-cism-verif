dnl Process this file with autoconf to produce a configure script.

dnl set version
m4_define([verif_major_version], [0])
m4_define([verif_minor_version], [2])
m4_define([verif_version],
	[verif_major_version.verif_minor_version])

AC_INIT([verif],[verif_version],[Magnus.Hagdorn@ed.ac.uk])
AM_INIT_AUTOMAKE

dnl minimum required glimmer version
min_glimmer_major_version=0
min_glimmer_minor_version=5
min_glimmer_micro_version=5

VERIF_MAJOR_VERSION=verif_major_version
VERIF_MINOR_VERSION=verif_minor_version
VERIF_VERSION=verif_version
AC_SUBST(VERIF_MAJOR_VERSION)
AC_SUBST(VERIF_MINOR_VERSION)
AC_SUBST(VERIF_VERSION)

AC_PROG_RANLIB
AC_PROG_FC
AC_LANG_PUSH(Fortran)
AC_FC_SRCEXT(f90)
FCFLAGS="$FCFLAGS -fpp"
dnl Checking for python
AM_PATH_PYTHON([2.3],,[AC_MSG_RESULT(need at least python 2.3)])

dnl checking for glimmer prefix
AC_ARG_WITH(glimmer-prefix,[  --with-glimmer-prefix=PFX   Prefix where GLIMMER is installed (optional)],
            glimmer_config_prefix="$withval", glimmer_config_prefix="")

if test x$glimmer_config_prefix != x ; then
     glimmer_config_args="$glimmer_config_args --prefix=$glimmer_config_prefix"
     if test x${GLIMMER_CONFIG+set} != xset ; then
        GLIMMER_CONFIG=$glimmer_config_prefix/bin/glimmer-config
     fi
fi

AC_PATH_PROG(GLIMMER_CONFIG, glimmer-config, no)
if ! test -x "$GLIMMER_CONFIG"; then
  GLIMMER_CONFIG="no"
fi
if test "$GLIMMER_CONFIG" = "no" ; then
  AC_MSG_ERROR([Could not find glimmer-config])
fi

dnl Checking for version of glimmer
min_glimmer_version=$min_glimmer_major_version.$min_glimmer_minor_version.$min_glimmer_micro_version
AC_MSG_CHECKING(for GLIMMER - version >= $min_glimmer_version)
no_glimmer="no"
GLIMMER_CFLAGS=`$GLIMMER_CONFIG $glimmer_config_args --fcflags`
GLIMMER_LIBS=`$GLIMMER_CONFIG $glimmer_config_args --libs`
glimmer_config_major_version=`$GLIMMER_CONFIG $glimmer_config_args --version | \
       sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\1/'`
glimmer_config_minor_version=`$GLIMMER_CONFIG $glimmer_config_args --version | \
       sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\2/'`
glimmer_config_micro_version=`$GLIMMER_CONFIG $glimmer_config_args --version | \
       sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\3/'`
AC_MSG_RESULT([$glimmer_config_major_version.$glimmer_config_minor_version.$glimmer_config_micro_version])
if test  "$min_glimmer_micro_version" -gt "$glimmer_config_micro_version"; then
    no_glimmer="yes"
fi
if test  "$min_glimmer_minor_version" -gt "$glimmer_config_minor_version"; then
    no_glimmer="yes"
elif test  "$min_glimmer_minor_version" -lt "$glimmer_config_minor_version"; then
    no_glimmer="no"
fi
if test  "$min_glimmer_major_version" -gt "$glimmer_config_major_version"; then
    no_glimmer="yes"
elif test "$min_glimmer_major_version" -lt "$glimmer_config_major_version"; then
    no_glimmer="no"
fi
if test "$no_glimmer" = "yes" ; then
  AC_MSG_ERROR([GLIMMER version too old])
fi

GLIMMER_PREFIX=`$GLIMMER_CONFIG $glimmer_config_args --prefix`
AC_SUBST(GLIMMER_PREFIX)

AC_PATH_PROG(CONVERT, convert)

FCFLAGS="$CFLAGS $GLIMMER_CFLAGS"
LIBS="$GLIMMER_LIBS $LIBS"

AC_CONFIG_FILES([Makefile src/Makefile src/fortran/Makefile src/python/Makefile src/matlab/Makefile tests/Makefile data/Makefile])

AC_OUTPUT()
